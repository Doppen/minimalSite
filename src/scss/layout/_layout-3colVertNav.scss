@use '../abstracts' as *;



.hc_layout_3col {
  display: flex;
  flex-direction: column;
  width: calc(100% - $spaceGutter);
  min-height: 100vh;
  max-width: $siteWrapWidth;
  margin-left: auto;
  margin-right: $spaceGutter;
}


// 2 col
@media (min-width: $breakpoint2Col) {
  .hc_layout_3col {

    display: grid;
    grid-template-columns: [col1] minMax(auto, $colWidth1) [col2] auto [colEnd];
    grid-template-rows: [rHead] $topBarHeight1 [r1] auto [r2] auto  [rEnd];
    column-gap: $spaceGutter;


    #col1 {
      grid-column: col1 / col2;     grid-row: rHead / rEnd;}

    #col2 {
      grid-column: col2 / colEnd;   grid-row: r1 ; margin-bottom: $spaceGutter}

    #col3 {
      grid-column: col2 / colEnd;   grid-row: r2}

    #topbar {
      grid-column: col2 / colEnd;   grid-row: rHead}
  }
}






// 3col
@media (min-width: $breakpoint3Col) {
  .hc_layout_3col {
    grid-template-columns: [col1] minMax(auto, $colWidth1) [col2] auto [col3] minMax(auto, $colWidth1) [colEnd];
    grid-template-rows: [rHead] $topBarHeight2 [r1] auto  [rEnd];
    column-gap: 60px;

    #col1 {
      grid-column: col1 / col2;     grid-row: rHead / [rEnd] }

    #col2 {
      grid-column: col2 / col3;   grid-row: r1 }

    #col2wide {
      grid-column: col2 / colEnd;   grid-row: r1 }


    #col3 {
      grid-column: col3 / colEnd;   grid-row: r1 }

    #topbar {
      grid-column: col2 / colEnd;   grid-row: rHead}

  }
}


@media (min-width: $breakpoint3ColBig) {
  .hc_layout_3col {
    grid-template-columns: [col1] minMax(auto, $colWidth2) [col2] auto [col3] minMax(auto, $colWidth2) [colEnd];
    grid-template-rows: [rHead] $topBarHeight2 [r1] auto  [rEnd];
    column-gap: 60px;
  }
}

@media (min-width: $siteWrapWidth) {
  .hc_layout_3col {
    margin-left: auto;
    margin-right: auto;
  }
}
